$ mkdir learngit
$ cd learngit
$ pwd 			//pwd命令用于显示当前目录

$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/
		//通过git init命令把这个目录变成Git可以管理的仓库

$ git add 平凡的世界.txt
$ git commit -m "孙少平"
[master (root-commit) cb926e7] wrote a readme file
 1 file changed, 2 insertions(+)
 create mode 100644 readme.txt

运行git status命令看看结果：
$ git status

用git diff这个命令看看版本
$ git diff readme.txt 

用git log命令查看历史记录
$ git log

回退到上一个版本可以使用git reset命令：
$ git reset --hard HEAD^
HEAD is now at ea34578 add distributed

用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：
$ git diff HEAD -- readme.txt 

git checkout -- file可以丢弃工作区的修改：
$ git checkout -- readme.txt

用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区：
$ git reset HEAD readme.txt
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

用rm命令删除文件：
$ rm test.txt

用命令git rm删掉，并且git commit：
$ git rm test.txt
现在，文件就从版本库中被删除了。

$ git checkout -- test.txt
git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。

添加远程库 在本地的learngit仓库下运行命令：
$ git remote add origin git@github.com:FeiGuozhang/仓库名.git

把本地库的所有内容推送到远程库上：
$ git push -u origin master
添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的。
由于远程库是空的，我们第一次推送master分支时，加上了-u参数，
Git不但会把本地的master分支内容推送的远程新的master分支，
还会把本地的master分支和远程的master分支关联起来，
在以后的推送或者拉取时就可以简化命令。

从现在起，只要本地作了提交，就可以通过命令：
$ git push origin master
把本地master分支的最新修改推送至GitHub，

用命令git clone克隆一个本地库：
$ git clone git@github.com:michaelliao/gitskills.git

Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

要查看远程库的信息，用git remote：
$ git remote
或者，用git remote -v显示更详细的信息：
$ git remote -v






























































